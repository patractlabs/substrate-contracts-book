(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{592:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[t._v("#")]),t._v(" 基础")]),t._v(" "),a("p",[t._v("Ask! 提供了"),a("code",[t._v("ask-lang")]),t._v("包，它包括合约常用存储类型的实现、智能合约底层原语的封装等。")]),t._v(" "),a("h2",{attrs:{id:"存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储"}},[t._v("#")]),t._v(" 存储")]),t._v(" "),a("h3",{attrs:{id:"内置存储类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内置存储类型"}},[t._v("#")]),t._v(" 内置存储类型")]),t._v(" "),a("p",[t._v("Ask! 为"),a("a",{attrs:{href:"https://www.assemblyscript.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("AssemblyScript"),a("OutboundLink")],1),t._v(" 的基本类型和标准库集合提供了支持Scale编码和存储的版本，包括"),a("code",[t._v("bool")]),t._v("/"),a("code",[t._v("i{8, 16, 32, 64, 128}")]),t._v("/"),a("code",[t._v("u{8, 16, 32, 64, 128}")]),t._v("/"),a("code",[t._v("string(String)")]),t._v("/"),a("code",[t._v("Array")]),t._v("/"),a("code",[t._v("Set")]),t._v("/"),a("code",[t._v("Map")]),t._v("，对应于                                                                                                                                                      "),a("code",[t._v("Bool")]),t._v("/"),a("code",[t._v("Int{8, 16, 32, 64, 128}")]),t._v("/"),a("code",[t._v("u{8, 16, 32, 64, 128}")]),t._v("/"),a("code",[t._v("ScaleString")]),t._v("/"),a("code",[t._v("ScaleArray")]),t._v("/"),a("code",[t._v("ScaleSet")]),t._v("/"),a("code",[t._v("ScaleMap")]),t._v("。当在合约代码相关位置使用了上述提到的基本类型（但不包括"),a("code",[t._v("Array")]),t._v("、"),a("code",[t._v("Set")]),t._v("、"),a("code",[t._v("Map")]),t._v("等容器类型），Ask!会在编译期自动转换为对应的Scale类型（即自动装箱/拆箱）。")]),t._v(" "),a("p",[t._v("您可以通过"),a("code",[t._v("ask-lang")]),t._v("导入"),a("code",[t._v("Bool")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Bool "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ask-lang'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"定义存储类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义存储类型"}},[t._v("#")]),t._v(" 定义存储类型")]),t._v(" "),a("p",[t._v("Ask!提供 "),a("code",[t._v("@storage")]),t._v(" 来装饰类为存储类型，存储类型里的字段需要支持"),a("a",{attrs:{href:"https://github.com/paritytech/parity-scale-codec",target:"_blank",rel:"noopener noreferrer"}},[t._v("Scale编码"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[t._v("@storage\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Storage")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Store a bool")]),t._v("\n    b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" bool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Store a number")]),t._v("\n    n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" i32"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"初始化存储类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化存储类型"}},[t._v("#")]),t._v(" 初始化存储类型")]),t._v(" "),a("p",[t._v("我们可以在合约初始化构造函数里初始化存储值，合约类必须至少提供一个"),a("code",[t._v("@constructor")]),t._v("修饰的初始化函数。示例如下。")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[t._v("@contract\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyContract")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  num"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" i32"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  @"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" i32"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("注意")]),t._v("  默认构造函数"),a("code",[t._v("@constructor")]),t._v("必须是public的，否则会出现编译错误的提示。 合约函数的参数和返回值必须是基本类型或者实现Codec编码的类型。")]),t._v(" "),a("h3",{attrs:{id:"读取存储值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读取存储值"}},[t._v("#")]),t._v(" 读取存储值")]),t._v(" "),a("p",[t._v("Ask!的存储和合约是可以分开声明的，也建议您分开声明。合约类里声明的函数是真正对外的合约API，而存储只是实现细节。")]),t._v(" "),a("h3",{attrs:{id:"修改存储值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改存储值"}},[t._v("#")]),t._v(" 修改存储值")]),t._v(" "),a("p",[t._v("Ask!为"),a("code",[t._v("@message")]),t._v("方法提供了"),a("code",[t._v("mutates")]),t._v("属性，默认为"),a("code",[t._v("true")]),t._v("。当设置为"),a("code",[t._v("false")]),t._v("时，该方法会在运行时拒绝修改存储值。")]),t._v(" "),a("h3",{attrs:{id:"events"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("#")]),t._v(" Events")]),t._v(" "),a("p",[t._v("智能合约可以定义在合约执行期间可以发出的事件，第三方工具可以使用发出事件来查询有关合约执行和状态的信息。Event的字段必须实现"),a("code",[t._v("Codec")]),t._v("接口，它们会作为event data被收集起来，而 "),a("code",[t._v("@topic")]),t._v(" 装饰的字段还会作为事件的索引。")]),t._v(" "),a("h4",{attrs:{id:"使用示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用示例"}},[t._v("#")]),t._v(" 使用示例")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[t._v("@event\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Transfer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  @topic\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AccountId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  @topic\n  to"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AccountId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" u128"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AccountId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" to"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AccountId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" u128"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("to "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" to"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("当实例化"),a("code",[t._v("@event")]),t._v("类时，内部会自动调用"),a("code",[t._v("deposit_event")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"链环境函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链环境函数"}},[t._v("#")]),t._v(" 链环境函数")]),t._v(" "),a("p",[t._v("Ask! 提供一些类，它们的方法提供了链提供的能力的API：")]),t._v(" "),a("ul",[a("li",[t._v("Crypto：提供了加密相关的API。")]),t._v(" "),a("li",[t._v("Gas：提供了Gas相关的API。")]),t._v(" "),a("li",[t._v("AccountId ：提供了账户相关的API。")]),t._v(" "),a("li",[t._v("Msg ：提供了 消息相关的API。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);