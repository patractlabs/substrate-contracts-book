"use strict";(self.webpackChunksubstrate_contracts_book=self.webpackChunksubstrate_contracts_book||[]).push([[8383],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||c;return n?r.createElement(f,o(o({ref:t},l),{},{components:n})):r.createElement(f,o({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,o=new Array(c);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var p=2;p<c;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7003:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return l},default:function(){return d}});var r=n(7462),a=n(3366),c=(n(7294),n(3905)),o=["components"],i={},s="@redspot_chai\u63d2\u4ef6",p={unversionedId:"redspot/plugin/redspot-chai",id:"redspot/plugin/redspot-chai",isDocsHomePage:!1,title:"@redspot_chai\u63d2\u4ef6",description:"\u80cc\u666f\u4fe1\u606f",source:"@site/docs/redspot/plugin/redspot-chai.md",sourceDirName:"redspot/plugin",slug:"/redspot/plugin/redspot-chai",permalink:"/substrate-contracts-book/redspot/plugin/redspot-chai",editUrl:"https://github.com/patractlabs/substrate-contracts-book/docs/redspot/plugin/redspot-chai.md",version:"current",frontMatter:{},sidebar:"docs",previous:{title:"@redspot_known-types\u63d2\u4ef6",permalink:"/substrate-contracts-book/redspot/plugin/redspot-known-types"},next:{title:"@redspot_gas-reporter \u63d2\u4ef6",permalink:"/substrate-contracts-book/redspot/plugin/redspot-gas-reporter"}},l=[{value:"\u80cc\u666f\u4fe1\u606f",id:"\u80cc\u666f\u4fe1\u606f",children:[]},{value:"\u4f7f\u7528\u524d\u63d0\u6761\u4ef6",id:"\u4f7f\u7528\u524d\u63d0\u6761\u4ef6",children:[]},{value:"\u4f7f\u7528\u793a\u4f8b",id:"\u4f7f\u7528\u793a\u4f8b",children:[]},{value:"equal",id:"equal",children:[]},{value:"changeTokenBalance",id:"changetokenbalance",children:[]},{value:"emit",id:"emit",children:[]}],u={toc:l};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,c.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"redspot_chai\u63d2\u4ef6"},"@redspot_chai\u63d2\u4ef6"),(0,c.kt)("h2",{id:"\u80cc\u666f\u4fe1\u606f"},"\u80cc\u666f\u4fe1\u606f"),(0,c.kt)("p",null,"\u8be5\u63d2\u4ef6\u63d0\u4f9b\u4e86\u4e00\u7ec4\u4fbf\u4e8e\u7f16\u5199\u5408\u7ea6\u6d4b\u8bd5\u7528\u4f8b\u7684\u5339\u914d\u5668\uff0c\u8bbe\u8ba1\u7075\u611f\u6765\u81ea\u4e8e",(0,c.kt)("a",{parentName:"p",href:"https://ethereum-waffle.readthedocs.io/en/latest/matchers.html"},"waffle"),"\u3002"),(0,c.kt)("h2",{id:"\u4f7f\u7528\u524d\u63d0\u6761\u4ef6"},"\u4f7f\u7528\u524d\u63d0\u6761\u4ef6"),(0,c.kt)("p",null,"\u5f15\u5165@redspot/chai\u63d2\u4ef6\u3002\u8be5\u63d2\u4ef6\u4f1a\u81ea\u52a8\u4fee\u6539chai\u5339\u914d\u5668\uff0c\u60a8\u65e0\u9700\u624b\u52a8\u8c03\u7528\u3002"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-typescript"},"// redspot.config.ts\nimport { RedspotUserConfig } from 'redspot/types';\nimport '@redspot/chai';\nexport default {\n ...\n} as RedspotUserConfig;\n")),(0,c.kt)("h2",{id:"\u4f7f\u7528\u793a\u4f8b"},"\u4f7f\u7528\u793a\u4f8b"),(0,c.kt)("p",null,"\u4f7f\u7528@redspot/chai\u63d2\u4ef6\u7684\u5b8c\u6574\u5b9e\u4f8b\u5982\u4e0b\u3002"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-typescript"},"import BN from 'bn.js';\nimport { expect } from 'chai';\nimport { patract, network, artifacts } from 'redspot';\nconst { getContractFactory, getRandomSigner } = patract;\nconst { api, getSigners } = network;\ndescribe('ERC20', () => {\n  after(() => {\n    return api.disconnect();\n  });\n  async function setup() {\n    const one = new BN(10).pow(new BN(api.registry.chainDecimals[0]));\n    const signers = await getSigners();\n    const Alice = signers[0];\n    const sender = Alice;\n    const contractFactory = await getContractFactory('erc20', sender);\n    const contract = await contractFactory.deploy('new', '1000');\n    const abi = artifacts.readArtifact('erc20');\n    const receiver = await getRandomSigner();\n    return { sender, contractFactory, contract, abi, receiver, Alice, one };\n  }\n  it('Assigns initial balance', async () => {\n    const { contract, sender } = await setup();\n    const result = await contract.query.balanceOf(sender.address);\n    expect(result.output).to.equal(1000);\n  });\n  it('Transfer adds amount to destination account', async () => {\n    const { contract, receiver } = await setup();\n    await expect(() =>\n      contract.tx.transfer(receiver.address, 7)\n    ).to.changeTokenBalance(contract, receiver, 7);\n    await expect(() =>\n      contract.tx.transfer(receiver.address, 7)\n    ).to.changeTokenBalances(contract, [contract.signer, receiver], [-7, 7]);\n  });\n  it('Transfer emits event', async () => {\n    const { contract, sender, receiver } = await setup();\n    await expect(contract.tx.transfer(receiver.address, 7))\n      .to.emit(contract, 'Transfer')\n      .withArgs(sender.address, receiver.address, 7);\n  });\n  it('Can not transfer above the amount', async () => {\n    const { contract, receiver } = await setup();\n    await expect(contract.tx.transfer(receiver.address, 1007)).to.not.emit(\n      contract,\n      'Transfer'\n    );\n  });\n  it('Can not transfer from empty account', async () => {\n    const { contract, Alice, one, sender } = await setup();\n    const emptyAccount = await getRandomSigner(Alice, one.muln(10000));\n    await expect(\n      contract.tx.transfer(sender.address, 7, {\n        signer: emptyAccount\n      })\n    ).to.not.emit(contract, 'Transfer');\n  });\n});\n")),(0,c.kt)("p",null,"\u6b64\u63d2\u4ef6\u66f4\u591a\u5185\u7f6e\u7684\u7528\u6cd5\uff0c\u8be6\u60c5\u8bf7\u53c2\u89c1",(0,c.kt)("a",{parentName:"p",href:"https://www.chaijs.com/"},"chai"),"\u6587\u6863\u3002"),(0,c.kt)("h2",{id:"equal"},"equal"),(0,c.kt)("p",null,"@redspot/chai\u63d2\u4ef6\u4f1a\u4fee\u6539\u9ed8\u8ba4\u7684equal\u7684\u5339\u914d\u65b9\u5f0f\u3002\u9ed8\u8ba4\u7684equal\u4e0d\u652f\u6301\u5339\u914d\u5bf9\u8c61\u3002\u4f46\u662f @redspot/chai\u63d2\u4ef6\u53ef\u4ee5\u3002"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-typescript"},"expect(new BN(1000)).to.equal(1000); // true\nexpect(AccountId).to.equal('5Gdjkw....'); // true\nexpect(Uint8Array([1, 2, 3])).to.equal('0x010203'); // true\n")),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"\u5bf9\u4e8eBN\u7c7b\u578b\uff0cequal\u4f1a\u8c03\u7528",(0,c.kt)("inlineCode",{parentName:"li"},"new BN(expected).eq(actual)"),"\uff0c\u5e76\u5224\u65ad\u662f\u5426\u76f8\u7b49\u3002"),(0,c.kt)("li",{parentName:"ul"},"\u5bf9\u4e8ePolkadot.js \u4e2d\u5b9a\u4e49\u7684\u7c7b\u578b\uff0cequal\u4f1a\u8c03\u7528",(0,c.kt)("inlineCode",{parentName:"li"},"Type.eq(actual)"),"\uff0c\u5e76\u5224\u65ad\u662f\u5426\u76f8\u7b49\u3002"),(0,c.kt)("li",{parentName:"ul"},"\u5bf9\u4e8euint8Array\u7c7b\u578b\uff0cequal\u4f1a\u5c06\u5b83\u4eec\u90fd\u8f6c\u5316\u4e3a\u5341\u516d\u8fdb\u5236\uff0c\u518d\u5224\u65ad\u662f\u5426\u76f8\u7b49\u3002"),(0,c.kt)("li",{parentName:"ul"},"\u5176\u4ed6\u7c7b\u578b\u5219\u91c7\u7528\u9ed8\u8ba4\u7684\u5224\u65ad\u65b9\u5f0f\uff0c\u5224\u65ad\u662f\u5426\u76f8\u7b49\u3002")),(0,c.kt)("h2",{id:"changetokenbalance"},"changeTokenBalance"),(0,c.kt)("p",null,"\u8be5\u5339\u914d\u5668\u53ef\u4ee5\u68c0\u6d4berc20\u7684\u4f59\u989d\u53d8\u5316\uff0c\u5185\u90e8\u4f1a\u8c03\u7528balanceOf\u63a5\u53e3\u5224\u65ad\u4f59\u989d\u3002\u7531\u4e8eerc20-trait\u7684\u83b7\u53d6\u4f59\u989d\u63a5\u53e3\u662f",(0,c.kt)("inlineCode",{parentName:"p"},"baseErc20\uff0cbalanceOf"),", \u6240\u4ee5",(0,c.kt)("inlineCode",{parentName:"p"},"changeTokenBalance"),"\u5e76\u4e0d\u9002\u7528\u4e8eerc20-trait \u3002"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-typescript"},"await expect(() =>\n  contract.tx.transfer(receiver.address, 7)\n).to.changeTokenBalance(contract, receiver, 7);\nawait expect(() =>\n  contract.tx.transfer(receiver.address, 7)\n).to.changeTokenBalances(contract, [contract.signer, receiver], [-7, 7]);\n")),(0,c.kt)("h2",{id:"emit"},"emit"),(0,c.kt)("p",null,"\u8be5\u5339\u914d\u5668\u53ef\u4ee5\u68c0\u6d4b\u5408\u7ea6\u662f\u5426\u53d1\u51fa\u4e8b\u4ef6\uff0c\u4f7f\u7528\u793a\u4f8b\u5982\u4e0b\uff1a"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"\u68c0\u6d4b\u662f\u5426\u6709Transfer\u4e8b\u4ef6\u88abemit"),(0,c.kt)("pre",{parentName:"li"},(0,c.kt)("code",{parentName:"pre",className:"language-typescript"},"await expect(contract.tx.transfer(receiver.address, 7)).to.emit(\n  contract,\n  'Transfer'\n);\n"))),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"\u68c0\u6d4b\u8be5\u4e8b\u4ef6\u662f\u5426\u5305\u542b\u6307\u5b9a\u7684\u53c2\u6570"),(0,c.kt)("pre",{parentName:"li"},(0,c.kt)("code",{parentName:"pre",className:"language-typescript"},"await expect(contract.tx.transfer(receiver.address, 7))\n  .to.emit(contract, 'Transfer')\n  .withArgs(sender.address, receiver.address, 7);\n"))),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("p",{parentName:"li"},"\u4e0d\u671f\u5f85\u53d1\u51fa\u4e8b\u4ef6"),(0,c.kt)("pre",{parentName:"li"},(0,c.kt)("code",{parentName:"pre",className:"language-typescript"},"await expect(\n  contract.tx.transfer(sender.address, 7, {\n    signer: emptyAccount\n  })\n).to.not.emit(contract, 'Transfer');\n")))))}d.isMDXComponent=!0}}]);