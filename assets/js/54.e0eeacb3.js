(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{614:function(t,s,a){"use strict";a.r(s);var e=a(6),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"elara-v0-1-报告"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#elara-v0-1-报告"}},[t._v("#")]),t._v(" Elara v0.1 报告")]),t._v(" "),a("p",[t._v("Overview")]),t._v(" "),a("p",[t._v("Five weeks ago, "),a("a",{attrs:{href:"https://github.com/patractlabs",target:"_blank",rel:"noopener noreferrer"}},[t._v("Patract Labs"),a("OutboundLink")],1),t._v(" applied a "),a("a",{attrs:{href:"https://polkadot.polkassembly.io/post/103",target:"_blank",rel:"noopener noreferrer"}},[t._v("treasury proposal #103"),a("OutboundLink")],1),t._v(" for Elara v0.1, which will be an instant and scalable Polkadot API service.")]),t._v(" "),a("p",[t._v("In the proposal, we promised to finish the following works (referring to "),a("a",{attrs:{href:"https://polkadot.polkassembly.io/motion/31",target:"_blank",rel:"noopener noreferrer"}},[t._v("motion #31"),a("OutboundLink")],1),t._v("):")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("v0.1: Implement Substrate node access")])]),t._v(" "),a("ul",[a("li",[t._v("Create a server-side framework to develop proxy access, automatic monitoring and data statistics to the RPC service of the Substrate node")]),t._v(" "),a("li",[t._v("Support developers to use http and web-socket protocols to uniformly access the network through the server framework")]),t._v(" "),a("li",[t._v("Develop a front-end dashboard to display relevant monitoring statistics of the RPC service of the Substrate node")])]),t._v(" "),a("p",[a("strong",[t._v("How to verify v0.1: Youtube demo video & Github source")])]),t._v(" "),a("ul",[a("li",[t._v("The Substrate node of the service can be accessed through http and web-socket protocols")]),t._v(" "),a("li",[t._v("Can monitor RPC requests of Substrate nodes")]),t._v(" "),a("li",[t._v("Can view the relevant monitoring statistics from the dashboard")])])]),t._v(" "),a("p",[t._v("By now, we have finished all the development requirements for Elara v0.1 on time. There is a demo video to show all the features on YouTube in https://youtu.be/7UhsUEqk1pQ. The Github repo is https://github.com/patractlabs/elara, and the homepage of a demo dashboard to show the current statistics is in https://elara.patract.io/.")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/5023721/97083914-fc841080-1645-11eb-9478-306fc9b1dcc4.png",alt:"image"}})]),t._v(" "),a("p",[t._v("Then, Let's show you how Elara works:")]),t._v(" "),a("h2",{attrs:{id:"start-elara-on-your-own-computer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start-elara-on-your-own-computer"}},[t._v("#")]),t._v(" Start Elara On Your Own Computer")]),t._v(" "),a("p",[t._v("Elara v0.1 can be used for any Substrate blockchain. For example, if you want to run a Polkadot or Kusama node to provide a public RPC endpoint node, then you what to monitor how many times and what kind of RPC calls had been called in one day, you can do the following steps to start Elara:")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("The node server should already have "),a("code",[t._v("yarn")]),t._v(" and "),a("code",[t._v("node")]),t._v(" command.")])]),t._v(" "),a("li",[a("p",[t._v("Git clone Elara into this server:")])])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/patractlabs/elara.git\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("Install Elara’s dependencies:")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" elara\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("Install database:")])]),t._v(" "),a("p",[t._v("Currently, Elara use "),a("code",[t._v("Redis")]),t._v(" memory database to provide the back-end DB to store all data. We will support other database like MongoDB or PostgreSQL in the future, but now we just support Redis DB and the corresponding configs. If you need persistent data,  using redis’ persistent feature is good enough.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for ubuntu or debian")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" redis\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# other system just replace to related command to install redis")]),t._v("\n")])])]),a("ul",[a("li",[t._v("Notice: we advice to config password for Redis if you use Elara in production environment *")])]),t._v(" "),a("p",[t._v("And on the other hand, the Redis server instance can be replaced by cloud service. In this way, DevOps can save some time and lot of troubles.")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("Start Polkadot or Kusama, or any other substrate node that you want to monitor.")])]),t._v(" "),a("p",[t._v("Please notice that all Substrate node will export "),a("code",[t._v("ws-port")]),t._v(" and "),a("code",[t._v("rpc-port")]),t._v(", and can set some limit for commands, like "),a("code",[t._v("--rpc-cors")]),t._v(", "),a("code",[t._v("--rpc-methods")]),t._v(" or "),a("code",[t._v("--unsafe-rpc-external")]),t._v(", "),a("code",[t._v("--unsafe-ws-external")]),t._v(" or something else.")]),t._v(" "),a("p",[t._v("For more information, please refer to "),a("a",{attrs:{href:"https://github.com/paritytech/substrate/wiki/Public-RPC",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/paritytech/substrate/wiki/Public-RPC"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("Modify Elara’s config file:")])]),t._v(" "),a("p",[t._v("By now, Elara has provided a real RPC / web-socket service for outside users, and Elara can connect with Substrate node directly. Elara is doing like a proxy to transmit client requests to the node, at the same time, logging, monitoring, and counting all the requests.")]),t._v(" "),a("p",[t._v("So you need to modify config file for Elara:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" config/env/dev.env.js\n")])])]),a("p",[t._v("And you can see:")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DEBUG")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DEBUG")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dev-errer:*'")]),t._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    keys"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'elara@#^*&'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'elara'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this port is elara server, receive all client request(inlude rpc and websocket) and dashbord server port")]),t._v("\n    pid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'00000000000000000000000000000000'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    chain"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'substrate'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rpc'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'localhost:9933'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the substrate node rpc port")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ws'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'localhost:9944'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the substrate node websocket port")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    redis"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// the redis config")]),t._v("\n        host"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'127.0.0.1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        port"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'6379'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ms")]),t._v("\n    requests"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("In this config file, you should pay attention to 3 fields:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("port")]),t._v(" : This field is used for Elara server, all client requests will go through this port, including RPC requests and web-socket requests.")]),t._v(" "),a("li",[a("code",[t._v("chain/substrate")]),t._v(": This field is used to connect with the Substrate node, so it should match its  "),a("code",[t._v("--ws-port")]),t._v(" and "),a("code",[t._v("--rpc-port")]),t._v(".  If the Substrate node doesn’t set those two parameters, the default values are "),a("code",[t._v("9944")]),t._v(" and "),a("code",[t._v("9933")]),t._v(".")]),t._v(" "),a("li",[a("code",[t._v("redis")]),t._v(": This field is used to connect with the Redis instance.")])]),t._v(" "),a("ol",{attrs:{start:"7"}},[a("li",[t._v("Start Elara’s service and dashboard:")])]),t._v(" "),a("p",[t._v("In Elara’s root directory, you can start in the current process:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("node app.js\n")])])]),a("p",[t._v("Or use "),a("a",{attrs:{href:"https://github.com/Unitech/pm2",target:"_blank",rel:"noopener noreferrer"}},[t._v("pm2"),a("OutboundLink")],1),t._v(" to management the process")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("pm2 start pm2.json --env dev\n")])])]),a("p",[t._v("You can find the running log in  "),a("code",[t._v("elara/logs/")])]),t._v(" "),a("p",[t._v("And then you can start the dashboard:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ./daemon\nnohub node dashboard.js "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("\n")])])]),a("p",[t._v("Now open "),a("code",[t._v("http://127.0.0.1:8001/demo")]),t._v(" in your browser, you can see the dashboard and all the statistics for requests.")]),t._v(" "),a("p",[t._v("Please notice that the client request’s endpoint should be "),a("code",[t._v("http://127.0.0.1:8001")]),t._v(" or "),a("code",[t._v("ws://127.0.0.1:8001")]),t._v(" to start the RPC or web-socket request, otherwise the request can't be monitored by Elara.")]),t._v(" "),a("ol",{attrs:{start:"8"}},[a("li",[t._v("Start requesting from client:")])]),t._v(" "),a("ul",[a("li",[t._v("If you provide RPC service for developers:")])]),t._v(" "),a("ol",[a("li",[t._v("Method 1 : using curl to send HTTP requests:")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#curl http")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" --location --request POST "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:8001'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n          --header "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type: application/json'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n          --data-raw "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{\n              "id":1,\n              "jsonrpc":"2.0",\n              "method":"chain_getBlock",\n              "params":[]\n          }\'')]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Method 2: using "),a("a",{attrs:{href:"https://github.com/websockets/wscat",target:"_blank",rel:"noopener noreferrer"}},[t._v("wscat"),a("OutboundLink")],1),t._v(" to send websocket request:")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("    parachain@ubuntu:~/elara$ wscat  -c ws://localhost:8001/\n    Connected "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("press CTRL+C to quit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id"')]),t._v(":1,"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jsonrpc"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2.0"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"method"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chain_getBlock"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"params"')]),t._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Response data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("Method 3 : Using the SDK. You can refer to "),a("a",{attrs:{href:"https://github.com/polkadot-js",target:"_blank",rel:"noopener noreferrer"}},[t._v("polkadot-js"),a("OutboundLink")],1),t._v(", using the following and similar code to access the node by HTTP or websocket：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ApiPromise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" WsProvider "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@polkadot/api'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" HttpProvider "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@polkadot/rpc-provider'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Http")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" httpProvider "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpProvider")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:8001'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" hash "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" httpProvider"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chain_getBlockHash'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'latest block Hash'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Websocket")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" wsProvider "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WsProvider")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ws://localhost:8001'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" api "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" ApiPromise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" provider"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" wsProvider "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Do something")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("We also provide reference examples under "),a("code",[t._v("elara/example/")]),t._v(". Examples can be executed:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("    node client.js\n")])])]),a("ul",[a("li",[t._v("If you provide access endpoint to the "),a("a",{attrs:{href:"https://polkadot.js.org/apps/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Official Polkadot Portal"),a("OutboundLink")],1),t._v(", any other wallets or blockchain explorers:")])]),t._v(" "),a("p",[t._v("You must remember that the current endpoint is provided by elara, suck as "),a("code",[t._v("127.0.0.1:8001")]),t._v(". You can config "),a("code",[t._v("ws://127.0.0.1:8001")]),t._v(" in your https://polkadot.js.org/apps/ website.")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://user-images.githubusercontent.com/5023721/97085134-06117680-164e-11eb-9ae4-e01ab2474d3a.png",alt:"image"}})]),t._v(" "),a("p",[t._v("Then in your dashboard, you can see all the statistics.")]),t._v(" "),a("h2",{attrs:{id:"what-we-have-implemented-for-v0-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-we-have-implemented-for-v0-1"}},[t._v("#")]),t._v(" What we have implemented for v0.1")]),t._v(" "),a("p",[t._v("As we describe above, we have implemented all features required in proposal.")]),t._v(" "),a("p",[a("s",[t._v("The Substrate node of the service can be accessed through http and websocket protocols")])]),t._v(" "),a("blockquote",[a("p",[t._v("The "),a("a",{attrs:{href:"https://polkadot.js.org/apps/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Official Polkadot Portal"),a("OutboundLink")],1),t._v(" can directly use Elara as an endpoint.")])]),t._v(" "),a("p",[a("s",[t._v("Can monitor RPC requests of Substrate nodes")])]),t._v(" "),a("blockquote",[a("p",[t._v("We can see all the statistics in Redis or on dashboard.")])]),t._v(" "),a("p",[a("s",[t._v("Can view the relevant monitoring statistics from the dashboard")])]),t._v(" "),a("blockquote",[a("p",[t._v("We have provided a demo video to show this dashboard.")])]),t._v(" "),a("p",[t._v("Overall, we believe that the node services, wallets, blockchain explorers and other service providers can benefit from Elara! We have done the design of Elara v0.2, Please see the next treasury proposal https://polkadot.polkassembly.io/post/141.")])])}),[],!1,null,null,null);s.default=n.exports}}]);