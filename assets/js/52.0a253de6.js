(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{592:function(e,t,a){"use strict";a.r(t);var o=a(6),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"design"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#design"}},[e._v("#")]),e._v(" Design")]),e._v(" "),a("h2",{attrs:{id:"ask-design-overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ask-design-overview"}},[e._v("#")]),e._v(" Ask! Design Overview")]),e._v(" "),a("p",[e._v("AssemblyScript uses the asc compiler to compile AssemblyScript files into WebAssembly bytecode. However, it is not possible to directly generate wasm bytecode and meta-information file that conform to the "),a("code",[e._v("pallet-contract")]),e._v(" ABI, so need to write AS transform to intervene in the compiler compilation process, generate ABI-related code at a suitable location and export, After the type information is determined, "),a("code",[e._v("metadata.json")]),e._v(" is generated.")]),e._v(" "),a("h2",{attrs:{id:"design-ideas"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#design-ideas"}},[e._v("#")]),e._v(" Design ideas")]),e._v(" "),a("p",[e._v("Ask! provides "),a("code",[e._v("ask-transform")]),e._v(" (referred to as "),a("code",[e._v("transform")]),e._v(" in the following description) and "),a("code",[e._v("ask-lang")]),e._v(" two libraries.\nIn addition, we will provide a build tool called "),a("code",[e._v("ask-cli")]),e._v(" (similar to ink!'s "),a("code",[e._v("cargo-contract")]),e._v(") in the follow-up to help build and manage Ask! Wasm smart contract written.")]),e._v(" "),a("p",[e._v("The functions of Ask! are implemented as follows:")]),e._v(" "),a("ul",[a("li",[e._v("The main function of "),a("code",[e._v("ask-lang")]),e._v(" is to provide high-level APIs for writing smart contracts, including "),a("code",[e._v("pallet-contract")]),e._v(" primitive high-level encapsulation/scale coding/KV storage abstraction/common basic types/some universal interfaces. Users can automatically derive the combination of these basic classes through decorators.")]),e._v(" "),a("li",[e._v("The main function of "),a("code",[e._v("ask-transform")]),e._v(" is to generate code and "),a("code",[e._v("metadata.json")]),e._v(" meta-information files according to the decorator used in Ask! code. This part needs to complete the following tasks:\n"),a("ul",[a("li",[e._v("Analyze contract interfaces and parameters, and generate metadata files")]),e._v(" "),a("li",[e._v("Analyze custom contract decorators and generate corresponding logic codes")]),e._v(" "),a("li",[e._v("According to the definition of storage, read/write contract storage according to a certain process")])])])])])}),[],!1,null,null,null);t.default=s.exports}}]);