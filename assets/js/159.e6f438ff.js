(window.webpackJsonp=window.webpackJsonp||[]).push([[159],{734:function(t,e,r){"use strict";r.r(e);var a=r(6),v=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"jupiter-测试网"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jupiter-测试网"}},[t._v("#")]),t._v(" Jupiter 测试网")]),t._v(" "),r("h2",{attrs:{id:"介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),r("p",[t._v("Jupiter 是由 Patract 维护，包含 Patract 合约设计规范并兼容最新 pallet-contracts 模块的"),r("strong",[t._v("合约测试网")]),t._v("。Jupiter 有三类节点，分别是：")]),t._v(" "),r("ul",[r("li",[t._v("适用于速测试合约功能的 "),r("code",[t._v("jupiter-dev")]),t._v(" "),r("strong",[t._v("本地节点")]),t._v("。")]),t._v(" "),r("li",[t._v("独立运行对外提供最新合约功能的 "),r("code",[t._v("jupiter-prep")]),t._v(" "),r("strong",[t._v("独立测试网")]),t._v("。")]),t._v(" "),r("li",[t._v("运行于中继链并提供稳定合约功能的 "),r("code",[t._v("jupiter")]),t._v(" "),r("strong",[t._v("平行链测试网")]),t._v("。")])]),t._v(" "),r("p",[t._v("三个区块链网络的关键配置基本相同，例如合约计费，区块资源大小等。具体的配置详见 "),r("RouterLink",{attrs:{to:"/jupiter/network.html"}},[t._v("Jupiter 网络")]),t._v("。")],1),t._v(" "),r("p",[t._v("Jupiter 的项目地址是 "),r("a",{attrs:{href:"https://github.com/patractlabs/jupiter",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/patractlabs/jupiter"),r("OutboundLink")],1),t._v("。")]),t._v(" "),r("p",[t._v("正常编译后，在编译产物目录中将会出现三个可执行性文件： "),r("code",[t._v("jupiter-dev")]),t._v(", "),r("code",[t._v("jupiter-prep")]),t._v(" 和 "),r("code",[t._v("jupiter")]),t._v("。")]),t._v(" "),r("p",[t._v("在上面链接的仓库中，三个网络对应的节点实现分别是：")]),t._v(" "),r("ul",[r("li",[t._v("目录 "),r("code",[t._v("bin/node-dev")]),t._v("：本地开发模式，有交易即立即触发，方便合约开发者快速测试。")]),t._v(" "),r("li",[t._v("目录 "),r("code",[t._v("bin/node-prep")]),t._v("：独立链测试网模式，采用 Babe 作为出块算法，PoA 指定验证人，支持合约部署，调用。")]),t._v(" "),r("li",[t._v("目录 "),r("code",[t._v("bin/node")]),t._v("：平行链测试网模式，采用 Aura 作为收集人选择算法，PoA指定验证人，支持合约部署，调用。")])]),t._v(" "),r("p",[t._v("对应的 Runtime 实现分别是：")]),t._v(" "),r("ul",[r("li",[t._v("目录 "),r("code",[t._v("runtime/jupiter-dev")])]),t._v(" "),r("li",[t._v("目录 "),r("code",[t._v("runtime/jupiter-prep")])]),t._v(" "),r("li",[t._v("目录 "),r("code",[t._v("runtime/jupiter")])])]),t._v(" "),r("blockquote",[r("p",[t._v("注：针对第三种平行链模式，由于目前中继链（比如 Westend）不支持 Sandbox HostFunction，我们自己运行了一个支持 Sandbox HostFunction 的 Westend 测试网来运行 Jupiter 平行链。后续一旦中继链支持了 Sandbox HostFunction，Jupiter 平行链会切换到官方的 Westend 上。")])]),t._v(" "),r("h2",{attrs:{id:"changelog"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#changelog"}},[t._v("#")]),t._v(" ChangeLog")]),t._v(" "),r("ul",[r("li",[t._v("1.0.0: Jupiter PoA 网络正式发布，包含jupiter-prep 及 jupiter-dev")]),t._v(" "),r("li",[t._v("1.0.1: 设置 Jupiter PoA 的 ss58prefix 为 26，今后Jupiter沿用 26 作为地址的ss58prefix")]),t._v(" "),r("li",[t._v("1.0.2: 支持 ZK、随机数")]),t._v(" "),r("li",[t._v("1.0.3: 增加平行链")])]),t._v(" "),r("h2",{attrs:{id:"contract"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#contract"}},[t._v("#")]),t._v(" Contract")]),t._v(" "),r("p",[r("strong",[t._v("Patract's FRAME contracts pallet (We will name it as pallet-patracts in future)")])]),t._v(" "),r("p",[r("strong",[t._v("当前合约使用官方的 pallet-contracts，未来我们会迁移到自己的合约模块上。")])]),t._v(" "),r("p",[t._v("Patract 的 "),r("code",[t._v("FRAME contracts pallet")]),t._v(" 通过 ChainExtension 为合约提供了一些增强的特性，并且包含一些兼容性的修改：")]),t._v(" "),r("ul",[r("li",[t._v("ChainExtension\n"),r("ul",[r("li",[t._v("[ ] 支持合约日志，参考连接："),r("a",{attrs:{href:"https://github.com/patractlabs/ink-log",target:"_blank",rel:"noopener noreferrer"}},[t._v("ink-log"),r("OutboundLink")],1)]),t._v(" "),r("li",[t._v("[x] 支持 Zero-Knowledge，参考连接："),r("a",{attrs:{href:"https://github.com/patractlabs/PIPs/blob/main/PIPs/pip-101.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("PIP-101"),r("OutboundLink")],1)])])]),t._v(" "),r("li",[t._v("pallet-patracts\n"),r("ul",[r("li",[t._v("目前暂时没有新特性")])])])]),t._v(" "),r("p",[t._v("我们约定如下概念：")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("src pallet-contract")]),t._v("：substrate 官方的 pallet-contract 模块")]),t._v(" "),r("li",[r("code",[t._v("modified pallet-contracts")]),t._v("：Patract 从官方 fork 出来的修改，位于 vendor 目录下")])]),t._v(" "),r("p",[t._v("这两种 pallet_contract 对合约功能的支持：")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("src pallet-contract")]),t._v("：支持 Patract 的 "),r("code",[t._v("ChainExtension")])]),t._v(" "),r("li",[r("code",[t._v("modified pallet-contracts")]),t._v("：支持 Patract 的 "),r("code",[t._v("ChainExtension")]),t._v("，以及 Patract 对 pallet-contract 的修改")])]),t._v(" "),r("blockquote",[r("p",[t._v("注1：Patract 集成合约模块，可以参考 "),r("a",{attrs:{href:"https://github.com/patractlabs/patracts",target:"_blank",rel:"noopener noreferrer"}},[t._v("patracts"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[t._v("注2：Zero-Knowledge 的相关文档也可以参考："),r("a",{attrs:{href:"https://docs.patract.io/zkmega/tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("zkmega"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=v.exports}}]);