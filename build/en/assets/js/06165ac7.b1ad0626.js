"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9593],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,f=p["".concat(i,".").concat(m)]||p[m]||d[m]||o;return n?a.createElement(f,l(l({ref:t},s),{},{components:n})):a.createElement(f,l({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=p;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,l[1]=c;for(var u=2;u<o;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5174:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return s},default:function(){return p}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),l=["components"],c={},i="Europa contract execution log analysis",u={unversionedId:"europa/execution_info",id:"europa/execution_info",isDocsHomePage:!1,title:"Europa contract execution log analysis",description:"The structure for recording contract execution information in the current Europa pallet-contract is as follows.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/europa/execution_info.md",sourceDirName:"europa",slug:"/europa/execution_info",permalink:"/en/europa/execution_info",editUrl:"https://github.com/patractlabs/substrate-contracts-book/docs/europa/execution_info.md",version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Europa tutorial",permalink:"/en/europa/tutorial"},next:{title:"Europa debugging example",permalink:"/en/europa/sample"}},s=[{value:"Log field description",id:"log-field-description",children:[]},{value:"Contract nested call",id:"contract-nested-call",children:[]}],d={toc:s};function p(e){var t=e.components,c=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},d,c,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"europa-contract-execution-log-analysis"},"Europa contract execution log analysis"),(0,o.kt)("p",null,"The structure for recording contract execution information in the current Europa ",(0,o.kt)("inlineCode",{parentName:"p"},"pallet-contract")," is as follows."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"/// Record the contract execution context.\npub struct NestedRuntime {\n        /// Current depth\n    depth: usize,\n        /// The current contract execute result\n        ext_result: ExecResultTrace,\n        /// The value in sandbox successful result\n        sandbox_result_ok: Option<ReturnValue>,\n        /// Who call the current contract\n    caller: AccountId32,\n        /// The account of the current contract\n    self_account: Option<AccountId32>,\n        /// The input selector\n    selector: Option<HexVec>,\n        /// The input arguments\n    args: Option<HexVec>,\n        /// The value in call or the endowment in instantiate\n    value: u128,\n        /// The gas limit when this contract is called\n    gas_limit: Gas,\n        /// The gas left when this contract return\n    gas_left: Gas,\n        /// The host function call stack\n    env_trace: EnvTraceList,\n        /// The error in wasm\n    wasm_error: Option<WasmErrorWrapper>,\n        /// The trap in host function execution\n    trap_reason: Option<TrapReason>,\n        /// Nested contract execution context\n    nest: Vec<NestedRuntime>,\n}\n")),(0,o.kt)("p",null,"The log example corresponding to this structure is as follows."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"1: NestedRuntime {\n    ext_result: [success] ExecReturnValue { flags: 0, data:  },\n    caller: d43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d (5GrwvaEF...),\n    self_account: 0144d6fc570d7bddda6f8e36141f179cd172324599b556ef514193f3105865f6 (5C6NMXaS...),\n    selector: 0x9bae9d5e,\n    args: 0x40420f00000000000000000000000000,\n    value: 10000000000000000,\n    gas_limit: 200000000000,\n    gas_left: 190018947968,\n    env_trace: [\n        seal_input(Some(0x9bae9d5e40420f00000000000000000000000000)),\n        seal_caller(Some(0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d)),\n        ...\n       seal_set_storage((Some(0x0300000001000000000000000000000000000000000000000000000000000000), Some(0x000000000000000000000000))),\n    ],\n    sandbox_result_ok: Value(\n        I32(\n            0,\n        ),\n    ),\n    nest: [],\n}\n")),(0,o.kt)("h2",{id:"log-field-description"},"Log field description"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Field"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"1: NestedRuntime"),(0,o.kt)("td",{parentName:"tr",align:null},"Call the contract execution log with a depth of 1.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"ext_result"),(0,o.kt)("td",{parentName:"tr",align:null},"The execution result of the contract at the ",(0,o.kt)("inlineCode",{parentName:"td"},"pallet-contract")," level, there are two  cases: ",(0,o.kt)("inlineCode",{parentName:"td"},"[success]")," and ",(0,o.kt)("inlineCode",{parentName:"td"},"[failed]"),". ",(0,o.kt)("inlineCode",{parentName:"td"},"[success]")," can only indicate that the execution was successful at the ",(0,o.kt)("inlineCode",{parentName:"td"},"pallet-contract")," level, but the business logic of the contract itself may throw an Error. The data value in ",(0,o.kt)("inlineCode",{parentName:"td"},"ExecResultValue {flag:0, data: 0x...}")," may be the return value of the contract, or the enumeration value of Error defined in the contract. ",(0,o.kt)("inlineCode",{parentName:"td"},"[failed]")," will be followed by an ",(0,o.kt)("inlineCode",{parentName:"td"},"ExecError {.. }"),", the error message is defined in ",(0,o.kt)("inlineCode",{parentName:"td"},"pallet-contracts"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"caller"),(0,o.kt)("td",{parentName:"tr",align:null},"The caller of this contract may be the user or another contract account. When the value is ",(0,o.kt)("inlineCode",{parentName:"td"},"0x000..."),", it is called by RPC.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"self_account"),(0,o.kt)("td",{parentName:"tr",align:null},"Current contract account.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"selector"),(0,o.kt)("td",{parentName:"tr",align:null},"The function identifier passed to the contract, and the corresponding relationship can be queried in the metadata.json of the contract.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"args"),(0,o.kt)("td",{parentName:"tr",align:null},"The parameters passed to the contract calling function.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"value"),(0,o.kt)("td",{parentName:"tr",align:null},"Transfer amount to the current contract.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"gas_limit"),(0,o.kt)("td",{parentName:"tr",align:null},"The maximum amount of gas that can be used by the current contract.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"gas_left"),(0,o.kt)("td",{parentName:"tr",align:null},"The amount of gas remaining when exiting the current contract.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"env_trace"),(0,o.kt)("td",{parentName:"tr",align:null},"During the execution of the current contract, the call stack of host_function gives the parameters of each function in detail. Take seal_call as an example. If the input is Some(xxx) and the output is empty, then there may be an error in the process of calling each other between the contracts.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"trap_reason"),(0,o.kt)("td",{parentName:"tr",align:null},"The reason for trap encountered during host_function execution.",(0,o.kt)("br",null)," Return & Termination & Restoration: It is the normal exit strategy executed by the contract, not Error. ",(0,o.kt)("br",null),"SupervisorError: DispatchError defined in ",(0,o.kt)("inlineCode",{parentName:"td"},"pallet_contracts"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"wasm_error"),(0,o.kt)("td",{parentName:"tr",align:null},"If a Wasm execution error occurs in the contract, the Wasm call stack will be printed in this field. If and only if ",(0,o.kt)("inlineCode",{parentName:"td"},"ext_result")," is ",(0,o.kt)("inlineCode",{parentName:"td"},"[failed]"),".")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"sandbox_result_ok"),(0,o.kt)("td",{parentName:"tr",align:null},"If there is no ",(0,o.kt)("inlineCode",{parentName:"td"},"trap")," and no ",(0,o.kt)("inlineCode",{parentName:"td"},"wasm_error")," during the execution of host_function, then the contract is considered to be executed successfully and this field is printed. This field carries a ",(0,o.kt)("inlineCode",{parentName:"td"},"ReturnValue")," information. In ",(0,o.kt)("inlineCode",{parentName:"td"},"ink!"),", if the value returned is not 0, then an Error defined in ",(0,o.kt)("inlineCode",{parentName:"td"},"ink!")," may have occurred, and the corresponding  ",(0,o.kt)("a",{parentName:"td",href:"https://github.com/paritytech/ink/blob/abd5cf14c0883cb2d5acf81f2277aeec330aa843/crates/lang/src/error.rs#L66-L80"},"DispatchError")," needs to be queried.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"nest"),(0,o.kt)("td",{parentName:"tr",align:null},"Contract log of nested calls. If the current contract calls other contracts, the execution log of the called contract will be nested in this field.")))),(0,o.kt)("h2",{id:"contract-nested-call"},"Contract nested call"),(0,o.kt)("p",null,"Examples of mutual calls between contracts are as follows."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"In contract A, call contract C after calling contract B."),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{src:n(9848).Z})))),(0,o.kt)("p",null,"The log is as follows."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"1: NestedRuntime {\n    self_account: A,\n    nest:[\n        2: NestedRuntime {\n            self_account: B,\n            nest:[],\n        },\n        2: NestedRuntime {\n            self_account: C,\n            nest:[],\n        }\n    ]\n}\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"In contract A, call contract B, in contract B, call contract C"),(0,o.kt)("p",{parentName:"li"},(0,o.kt)("img",{src:n(9114).Z})))),(0,o.kt)("p",null,"The log is as follows."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"1: NestedRuntime {\n        self_account: A,\n        nest:[\n                2: NestedRuntime {\n                        self_account: B,\n                        nest:[\n                                3: NestedRuntime {\n                                self_account: C,\n                                nest:[],\n                        }\n                        ],\n                }  \n        ]\n}\n")))}p.isMDXComponent=!0},9848:function(e,t,n){t.Z=n.p+"assets/images/call_other_1-eb688f8f77489cd94eea42116f9aac41.png"},9114:function(e,t,n){t.Z=n.p+"assets/images/call_other_2-f9b33fdd6032c00de5986de19d8229c3.png"}}]);