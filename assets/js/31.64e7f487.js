(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{540:function(t,s,a){"use strict";a.r(s);var e=a(6),c=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ask"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ask"}},[t._v("#")]),t._v(" Ask!")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://camo.githubusercontent.com/207ae88065c356df521ad4c6cff4a68ef91ae963a9c65893dd0d9d991a4e00a8/68747470733a2f2f706174726163742e6e6574776f726b2f696d616765732f706174726163742d61736b2e706e67",alt:""}})]),t._v(" "),a("p",[t._v("Ask! 是由 Patract 设计的，基于 AssemblyScript 上构建的，能运行于"),a("code",[t._v("pallet-contracts")]),t._v("模块上的Wasm合约语言框架。")]),t._v(" "),a("p",[t._v("尽管 AssemblyScript 只是 typescript 的一个子集，但是有很多使用 typescript 作为开发语言的开发人员，因此这些开发人员学习 AssemblyScript 的成本非常低。 因此，Patract 认为 Ask! 项目具有很好的应用开发前景。与基于Rust的ink!相比，Patract 认为基于 typescript 的Ask! 可以有效降低合同开发者的门槛并丰富合同开发生态系统。")]),t._v(" "),a("p",[t._v("Ask! 使用和 ink! 采取宏设计eDSL这样类似的方式，通过在 AssemblyScript （后文称作AS）中提供注解，在AS的语法基础上提供了能适用于"),a("code",[t._v("pallet-contracts")]),t._v("合约模型上的功能。通过注解的这种实现方式，尽量隐藏了与合约相关的细节。另一方面 Ask! 的实现将会与 ink! 接近，在"),a("strong",[t._v("最终实现上将会最大程度保证与 ink! 合约的兼容")]),t._v("。")]),t._v(" "),a("blockquote",[a("p",[t._v("例如：\nink! 描述合约的外部调用接口采用 "),a("code",[t._v("#[ink(constructor)]")]),t._v(", "),a("code",[t._v("#[ink(message)]")]),t._v(" 对合约结构体的方法进行修饰。\n在 Ask! 中，将会采用 "),a("code",[t._v("@constructor")]),t._v("，"),a("code",[t._v("@action")]),t._v(" 等注解修饰合约的类方法，实现类似的功能。")])]),t._v(" "),a("h2",{attrs:{id:"ask-开发进度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ask-开发进度"}},[t._v("#")]),t._v(" Ask! 开发进度")]),t._v(" "),a("p",[a("strong",[t._v("Ask! 当前还在开发当中，当前只完成了Kusama财政议案的v0.1版。当前的很多设计将来都有可能发生不兼容性改变。")])]),t._v(" "),a("p",[t._v("TODO： 添加议案链接及报告链接。")])])}),[],!1,null,null,null);s.default=c.exports}}]);