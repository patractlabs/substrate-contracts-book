(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{589:function(t,a,e){"use strict";e.r(a);var s=e(6),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"basics"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basics"}},[t._v("#")]),t._v(" Basics")]),t._v(" "),e("p",[t._v("Ask! provides the "),e("code",[t._v("ask-lang")]),t._v(" package, which includes the implementation of common storage types in contracts, the encapsulation of the underlying primitives of smart contracts, etc.")]),t._v(" "),e("h2",{attrs:{id:"storage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#storage"}},[t._v("#")]),t._v(" Storage")]),t._v(" "),e("h3",{attrs:{id:"built-in-storage-type"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#built-in-storage-type"}},[t._v("#")]),t._v(" Built-in storage type")]),t._v(" "),e("p",[t._v("Ask! provides a version that supports Scale encoding and storage for the basic types of "),e("a",{attrs:{href:"https://www.assemblyscript.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("AssemblyScript"),e("OutboundLink")],1),t._v(" and standard library collections,\nIncluding "),e("code",[t._v("bool")]),t._v("/"),e("code",[t._v("i{8, 16, 32, 64, 128}")]),t._v("/"),e("code",[t._v("u{8, 16, 32, 64, 128}")]),t._v("/"),e("code",[t._v("string(String)")]),t._v("/"),e("code",[t._v("Array")]),t._v("/"),e("code",[t._v("Set")]),t._v("/"),e("code",[t._v("Map")]),t._v(",\nCorresponds to "),e("code",[t._v("Bool")]),t._v("/"),e("code",[t._v("Int{8, 16, 32, 64, 128}")]),t._v("/"),e("code",[t._v("u{8, 16, 32, 64, 128}")]),t._v("/"),e("code",[t._v("ScaleString")]),t._v("/"),e("code",[t._v("ScaleArray")]),t._v("/"),e("code",[t._v("ScaleSet")]),t._v("/"),e("code",[t._v("ScaleMap")]),t._v(".")]),t._v(" "),e("p",[t._v("When the basic types mentioned above are used in relevant positions in the contract code (but not including container types such as "),e("code",[t._v("Array")]),t._v("/"),e("code",[t._v("Set")]),t._v("/"),e("code",[t._v("Map")]),t._v("), Ask! It will be automatically converted to the corresponding Scale type (that is, automatic boxing/unboxing) during compile time.")]),t._v(" "),e("p",[t._v("You can import "),e("code",[t._v("Bool")]),t._v(" via "),e("code",[t._v("ask-lang")]),t._v(".")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Bool "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ask-lang'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h3",{attrs:{id:"define-the-storage-type"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#define-the-storage-type"}},[t._v("#")]),t._v(" Define the storage type")]),t._v(" "),e("p",[t._v("Ask! provides "),e("code",[t._v("@storage")]),t._v(" to decorate the class as a storage type.")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[t._v("@storage\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Storage")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Store a bool")]),t._v("\n    b"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" bool"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Store a number")]),t._v("\n    n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" i32"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("Ask! provides "),e("code",[t._v("@storage")]),t._v(" to decorate the class as a storage type, and the fields in the storage type need to support  "),e("a",{attrs:{href:"https://github.com/paritytech/parity-scale-codec",target:"_blank",rel:"noopener noreferrer"}},[t._v("Scale encoding"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("h3",{attrs:{id:"initialize-the-storage-type"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#initialize-the-storage-type"}},[t._v("#")]),t._v(" Initialize the storage type")]),t._v(" "),e("p",[t._v("We can initialize the stored value in the contract initialization constructor. The contract class must provide at least one initialization function decorated by "),e("code",[t._v("@constructor")]),t._v(". The example is as follows.")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[t._v("@contract\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyContract")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  num"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" i32"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  @"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" i32"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("strong",[t._v("Note")]),t._v(" The default constructor "),e("code",[t._v("@constructor")]),t._v(" must be public, otherwise a compilation error will appear. The parameters and return value of the contract function must be a basic type or a type that implements Codec encoding.")]),t._v(" "),e("h3",{attrs:{id:"read-the-storage-value"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#read-the-storage-value"}},[t._v("#")]),t._v(" Read the storage value")]),t._v(" "),e("p",[t._v("Ask!â€™s storage and contract can be declared separately, and it is also recommended that you declare them separately. The function declared in the contract class is the real external contract API, and storage is only the implementation details.")]),t._v(" "),e("h3",{attrs:{id:"modify-the-storage-value"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#modify-the-storage-value"}},[t._v("#")]),t._v(" Modify the storage value")]),t._v(" "),e("p",[t._v("Ask! provides the "),e("code",[t._v("mutates")]),t._v(" property for the "),e("code",[t._v("@message")]),t._v(" method, which defaults to "),e("code",[t._v("true")]),t._v(". When set to "),e("code",[t._v("false")]),t._v(", the method will refuse to modify the stored value at runtime.")]),t._v(" "),e("h3",{attrs:{id:"events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("#")]),t._v(" Events")]),t._v(" "),e("p",[t._v("Smart contracts can define events that can be emitted during contract execution, and third-party tools can use emitted events to query information about contract execution and status. Event fields must implement the "),e("code",[t._v("Codec")]),t._v(" interface, they will be collected as event data, and the fields decorated by "),e("code",[t._v("@topic")]),t._v(" will also serve as the index of the event.")]),t._v(" "),e("h3",{attrs:{id:"example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[t._v("@event\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Transfer")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  @topic\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AccountId"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  @topic\n  to"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AccountId"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  value"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" u128"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AccountId"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" to"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" AccountId"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" u128"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("to "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" to"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("When the "),e("code",[t._v("@event")]),t._v(" class is instantiated, "),e("code",[t._v("deposit_event")]),t._v(" is automatically called internally.")]),t._v(" "),e("h3",{attrs:{id:"chain-environment-function"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#chain-environment-function"}},[t._v("#")]),t._v(" Chain environment function")]),t._v(" "),e("p",[t._v("Ask! provides some classes whose methods provide APIs for the capabilities provided by the chain.")]),t._v(" "),e("ul",[e("li",[t._v("Crypto: Provides APIs related to encryption.")]),t._v(" "),e("li",[t._v("Gas: Provides APIs related to Gas.")]),t._v(" "),e("li",[t._v("AccountId: Provides APIs related to accounts.")]),t._v(" "),e("li",[t._v("Msg: Provides APIs related to messages.")])])])}),[],!1,null,null,null);a.default=n.exports}}]);