(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{565:function(t,e,a){"use strict";a.r(e);var s=a(6),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"getting-started"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[t._v("#")]),t._v(" Getting Started")]),t._v(" "),a("blockquote",[a("p",[t._v("At present, Ask! has only been in the development of the second phase of the Kusama Treasury proposal, and the function is not stable yet, so it has not been released to public repositories such as npm.")])]),t._v(" "),a("p",[t._v("This document assumes that the user has a basic AssemblyScript or Typescript programming foundation. If the user has not touched "),a("a",{attrs:{href:"https://www.assemblyscript.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("AssemblyScript"),a("OutboundLink")],1),t._v(" before, you need to have a basic understanding of it.")]),t._v(" "),a("h2",{attrs:{id:"download"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#download"}},[t._v("#")]),t._v(" Download")]),t._v(" "),a("p",[t._v("At present, the Ask project code has not been uploaded to npm, so you need to clone the warehouse directly. After the function development is stable, it will be released to npm.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/patractlabs/ask\n")])])]),a("p",[t._v("Enter the directory to download dependencies:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v("\n")])])]),a("h2",{attrs:{id:"started"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#started"}},[t._v("#")]),t._v(" Started")]),t._v(" "),a("h3",{attrs:{id:"case-contract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#case-contract"}},[t._v("#")]),t._v(" Case contract")]),t._v(" "),a("p",[t._v("Some basic example contracts such as "),a("code",[t._v("flipper")]),t._v(", "),a("code",[t._v("incrementer")]),t._v(", etc. are maintained in the "),a("code",[t._v("/examples")]),t._v(" directory of the Ask! project. Developers can refer to these examples to write smart contracts.\nThe following smart contract writing process takes the contract in the "),a("code",[t._v("/examples/flipper")]),t._v(" directory as an example to illustrate.")]),t._v(" "),a("p",[t._v("First, we create a new file "),a("code",[t._v("flipper.ts")]),t._v(" as the entry point, and the "),a("code",[t._v("export")]),t._v(" section in the wasm code generated by subsequent compilation corresponds to the function exported after the file is compiled. In fact, the AS single file can be used as a project, but here we need to introduce development dependencies through package.json.")]),t._v(" "),a("p",[t._v("You can also use the "),a("a",{attrs:{href:"https://github.com/AssemblyScript/asbuild/",target:"_blank",rel:"noopener noreferrer"}},[t._v("asbuild"),a("OutboundLink")],1),t._v(" build tool officially provided by AssemblyScript to generate the initial project.")]),t._v(" "),a("p",[t._v("After the project is created, we begin to define contract storage.\nAsk! uses the decorator "),a("code",[t._v("@storage")]),t._v(" to define a contract storage class. This process is similar to the "),a("code",[t._v("#[ink(storage)]")]),t._v(" macro in ink!. For example, in this case, we define the following contract storage class:")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[t._v("@storage\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stored")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  flag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" bool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("In this way, "),a("code",[t._v("Stored")]),t._v(" can be used as a storage class in the contract. The definition of the contract class is shown below.")]),t._v(" "),a("p",[t._v("Ask! provides the "),a("code",[t._v("@contract")]),t._v(" decorator to define a contract class, which is similar to the "),a("code",[t._v("#[ink::contract]")]),t._v(" macro in ink!. "),a("code",[t._v("@contract")]),t._v(" supports inheritance.")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[t._v("@contract\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Flipper")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Ask! provides "),a("code",[t._v("@constructor")]),t._v(" and "),a("code",[t._v("@message")]),t._v(" decorators to decorate non-static methods in the "),a("code",[t._v("@contract")]),t._v(" contract class. They are similar to "),a("code",[t._v("#[ink(constructor)]")]),t._v(" and "),a("code",[t._v("#[ink in ink! (message)]")]),t._v(".")]),t._v(" "),a("p",[t._v("-The method decorated by "),a("code",[t._v("@constructor")]),t._v(" will become an initialization function of the contract. Each class decorated by "),a("code",[t._v("@contract")]),t._v(" must have at least one "),a("code",[t._v("@constructor")]),t._v(" method (excluding the parent class). The initialization function of the parent class will not be directly Become a function of contract initialization.\n-The method decorated by "),a("code",[t._v("@message")]),t._v(" will become a method call of the contract. Each class decorated by "),a("code",[t._v("@contract")]),t._v(" must have at least one "),a("code",[t._v("@message")]),t._v(" method (including the parent class), and the child class will inherit the contract of the parent class by default Method, the user can override the method of the inherited contract.")]),t._v(" "),a("p",[t._v("Note: Each contract class needs to define a parameterless constructor to instantiate the contract. The "),a("code",[t._v("@constructor")]),t._v(" function is called after the constructor is called.")]),t._v(" "),a("p",[t._v("Then we implement the specific logic of Flipper:")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[t._v("@contract\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Flipper")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" stored"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Stored"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stored "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Stored")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  @"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initFlag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" bool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stored"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" initFlag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  @message\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flip")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" v "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stored"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stored"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  @"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mutates "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" bool "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stored"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flag"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("It provides a contract initialization function and two contract methods, among which the "),a("code",[t._v("get")]),t._v(" method is read-only because it sets "),a("code",[t._v("mutates = false")]),t._v(".")]),t._v(" "),a("p",[t._v("Here is a brief introduction to the "),a("code",[t._v("@storage")]),t._v(" and "),a("code",[t._v("@contract")]),t._v(" decorators, and we have implemented a minimal contract example.")]),t._v(" "),a("h3",{attrs:{id:"compilation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compilation"}},[t._v("#")]),t._v(" Compilation")]),t._v(" "),a("p",[t._v("Suppose we compile the contract under the "),a("strong",[t._v("root directory")]),t._v(" of the Ask! project, and the path of the current contract is located in "),a("code",[t._v("examples/flipper/flipper.ts")]),t._v(" (you can also replace it with the path of your own contract file), then the compilation command is:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("npx ask examples/flipper/flipper.ts\n")])])]),a("p",[t._v("After executing this command, a directory "),a("code",[t._v("extension")]),t._v(" will be generated under the directory of the contract file, which stores the expanded code, and the compiled product of the contract is located in the "),a("code",[t._v("target")]),t._v(" directory under the contract file directory:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("metadata.json")]),t._v(" describes the ABI of this contract, which can be provided to chains or tools that support this specification.")]),t._v(" "),a("li",[a("code",[t._v("target.wasm")]),t._v(" is the final wasm contract code, which can be executed when deployed on the corresponding chain.")])]),t._v(" "),a("h3",{attrs:{id:"on-chain-environmental-testing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#on-chain-environmental-testing"}},[t._v("#")]),t._v(" On-chain environmental testing")]),t._v(" "),a("p",[t._v("Ask! currently does not support unit testing.")]),t._v(" "),a("p",[t._v("Developers can use the contract execution environment sandbox "),a("RouterLink",{attrs:{to:"/en/europa/introduction.html"}},[t._v("Europa")]),t._v(" provided by Patract to deploy and test contracts.")],1),t._v(" "),a("p",[t._v("After starting Europa, developers can deploy and call contracts in the "),a("code",[t._v("target")]),t._v(" directory through "),a("a",{attrs:{href:"https://polkadot.js.org/apps",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://polkadot.js.org/apps"),a("OutboundLink")],1),t._v(". This process is similar to Ink! The operation process of the contract is the same.")])])}),[],!1,null,null,null);e.default=n.exports}}]);