"use strict";(self.webpackChunksubstrate_contracts_book=self.webpackChunksubstrate_contracts_book||[]).push([[8031],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var a=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,o=function(e,t){if(null==e)return{};var r,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=a.createContext({}),d=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=d(e.components);return a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,n=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=d(r),m=o,k=p["".concat(i,".").concat(m)]||p[m]||u[m]||n;return r?a.createElement(k,c(c({ref:t},l),{},{components:r})):a.createElement(k,c({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=r.length,c=new Array(n);c[0]=p;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,c[1]=s;for(var d=2;d<n;d++)c[d]=r[d];return a.createElement.apply(null,c)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},4218:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return d},toc:function(){return l},default:function(){return p}});var a=r(7462),o=r(3366),n=(r(7294),r(3905)),c=["components"],s={},i="Decorators overview",d={unversionedId:"ask/guides/decorators/overview",id:"ask/guides/decorators/overview",isDocsHomePage:!1,title:"Decorators overview",description:'ask! provides a set of decorators to allow developers to code smart contract in Assemblyscirpt. eg.@contract. To further define the decorator\'s behavior during compilation, ask! introduces parameters within decorator. eg. @message({"mutates" class decorators and syntax decorators.',source:"@site/i18n/en/docusaurus-plugin-content-docs/current/ask/guides/decorators/overview.md",sourceDirName:"ask/guides/decorators",slug:"/ask/guides/decorators/overview",permalink:"/substrate-contracts-book/en/ask/guides/decorators/overview",editUrl:"https://github.com/patractlabs/substrate-contracts-book/edit/master/docs/ask/guides/decorators/overview.md",version:"current",frontMatter:{},sidebar:"docs",previous:{title:"ask-cli",permalink:"/substrate-contracts-book/en/ask/guides/ask-cli"},next:{title:"Contract Decorators",permalink:"/substrate-contracts-book/en/ask/guides/decorators/contract-decorator"}},l=[{value:"contract",id:"contract",children:[{value:"class:",id:"class",children:[]},{value:"property:",id:"property",children:[]},{value:"method:",id:"method",children:[]}]},{value:"event",id:"event",children:[{value:"class",id:"class-1",children:[]},{value:"property:",id:"property-1",children:[]}]},{value:"metadata",id:"metadata",children:[]}],u={toc:l};function p(e){var t=e.components,r=(0,o.Z)(e,c);return(0,n.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"decorators-overview"},"Decorators overview"),(0,n.kt)("p",null,"ask! provides a set of decorators to allow developers to code smart contract in Assemblyscirpt. eg.",(0,n.kt)("inlineCode",{parentName:"p"},"@contract"),". To further define the decorator's behavior during compilation, ask! introduces parameters within decorator. eg. ",(0,n.kt)("inlineCode",{parentName:"p"},'@message({"mutates": false})'),". Currently, ask! has mainly two types of decorators: class decorators and syntax decorators."),(0,n.kt)("h2",{id:"contract"},"contract"),(0,n.kt)("h3",{id:"class"},"class:"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/substrate-contracts-book/en/ask/guides/decorators/contract-decorator###@contract"},(0,n.kt)("inlineCode",{parentName:"a"},"@contract")),": marks this class as a contract"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/substrate-contracts-book/en/ask/guides/decorators/contract-decorator###@dynamic"},"@dynamic"),": marks this class as an existing contract for cross contract call"),(0,n.kt)("h3",{id:"property"},"property:"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/substrate-contracts-book/en/ask/guides/decorators/contract-decorator###@state"},(0,n.kt)("inlineCode",{parentName:"a"},"@state")),": marks this class property as state needs to be synced to blockchain "),(0,n.kt)("h3",{id:"method"},"method:"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/substrate-contracts-book/en/ask/guides/decorators/contract-decorator###@constructor"},(0,n.kt)("inlineCode",{parentName:"a"},"@constructor")),": marks this method as constructor in instatiate a contract"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/substrate-contracts-book/en/ask/guides/decorators/contract-decorator###@message"},(0,n.kt)("inlineCode",{parentName:"a"},"@message")),": marks this method as a public method in a smart contract"),(0,n.kt)("h2",{id:"event"},"event"),(0,n.kt)("h3",{id:"class-1"},"class"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/substrate-contracts-book/en/ask/guides/decorators/event-decorator###@event"},(0,n.kt)("inlineCode",{parentName:"a"},"@event")),": marks this class as an event emitted during contract execution"),(0,n.kt)("h3",{id:"property-1"},"property:"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/substrate-contracts-book/en/ask/guides/decorators/event-decorator###@topic"},(0,n.kt)("inlineCode",{parentName:"a"},"@topic")),": marks this class property as a topic and to be indexed  "),(0,n.kt)("h2",{id:"metadata"},"metadata"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"@doc"),": provide documentation for the information generated by metadata.json. It can add documentation comments for @contract/@event/@message/@constructor declarations."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},'@contract\n@doc(desc = "MyToken conract that implement erc20 contract")\nclass MyToken {\n  // ...\n}\n')))}p.isMDXComponent=!0}}]);